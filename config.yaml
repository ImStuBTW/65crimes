# 65 Crimes
#
# Ergogen *really* does not want to create row-staggered keyboards.
# This config file rotates the entire keyboard 270 degrees as a
# workaround so that it can be treated as a very tall column
# staggered keyboard.
#
# This technically works, but it's not the most beginner friendly
# approach. If you're interested in creating a row-staggered
# keyboard in, it may be worth checking out other projects such as
# https://github.com/jeroen94704/klepcbgen or https://kb.xyz.is
#
units:
  # X and Y are flipped from the usual cx and cy spacing due to rotation.
  kx: 17
  ky: 18
  # Case Variables
  pcbpadding: 0
  caseinnerpadding: 1
  casepadding: 5
  insert: 2.5 # M2 heat set insert diameter.
points:
  zones:
    # Zone for placing MCU. This was a late addition to the layout and a litle hacky.
    # In hindsigh this could probably be done more clearly just using matrix refs.
    controller:
      anchor.shift: [320.25, -110.625]
      key:
        spread: 5
        padding: 10
      columns:
        parts:
          rows:
            mcu:
    # Main Key Matrix
    matrix:
      anchor.shift: [100, 75]
      # Keyboard is rotated so that Ergogen can treat it like a column staggered board.
      rotate: 270
      key:
        spread: 1kx
        padding: 1ky
        # Tags are used to treat the non-standard keys differently when defining the PCB.
        # This key.tags default defines everything as a standard u1 unless it's overriden.
        tags: [key, diode, u1]
      # Since this keyboard is rotated on its side, the "columns" are technically the rows.
      # Each "Column" has is given a row net definition.
      # One artifact of this approach is that the diodes are backwards.
      # I didn't discover this until the keyboard had been fabbed.
      # Thankfully FAK and other keyboard firmwares allow you to indicate if your matrix is
      # "ColToRow" or "RowToCol". But you may want to make different accomidations depending
      # on the needs of your keyboard.
      columns:
        # The Num row is given a goofy spacing to make it look like a function row.
        # This is for pure novelty. You can drop the shifts if you're making a standard 65%.
        num:
          key.column_net: row1
          rows:
            escape:
              # The first key in every row is rotated 180 degrees so that its hotswap socket
              # pad does not clip off the edge of the keyboard. The new "dioderotate" tag
              # is used to flip the diodes around to keep the same direction as the rest
              # of the diodes on the keyboard.
              rotate: 180
              tags: [,dioderotate]
            one:
              rotate: 180
              shift: [0kx, -2ky-6]
            five.shift: [0kx, 6]
            nine.shift: [0kx, 6]
            equals.tags: [, diodenudge]
            backspace:
              row_net: col15
              shift: [0kx, 0.25ky]
              tags: [, diodenudge]
            special.skip: true
        # The Top row does not have anything special going on.
        top:
          key.column_net: row2
          key.spread: 1.25kx # Add 0.25kx between the top row and num row.
          rows:
            escape:
              rotate: 180
              tags: [,dioderotate]
            one:
              rotate: 180
              shift: [0kx, -2ky]
            special.shift: [0kx, 0.25ky] # Nudge the last key 0.25kx away.
        # Likewise, the Home row is fairly straightforward.
        home:
          key.column_net: row3
          rows:
            # Everything's rotated, so the 1.25u key is 1.25ky "tall".
            # Keys need to be shifted to accomidate the extra spacing.
            escape:
              rotate: 180
              height: 1.25ky
              shift: [0kx, 0.125ky]
              # The leading ,, keeps the "key" tag and overwrites the "u1".
              tags: [,dioderotate,u125]
            one:
              rotate: 180
              shift: [0kx, -2ky-0.125ky]
            equals.skip: true
            # Same song and dance for a 1.75u key.
            backspace:
              height: 1.75ky
              shift: [0kx, -0.625ky]
              # The leading ,, keeps the "key" tag and overwrites the "u1".
              tags: [,,u175]
            special.shift: [0kx, 0.625ky]
        # Nothing new here.
        bottom:
          key.column_net: row4
          rows:
            escape:
              rotate: 180
              height: 1.75ky
              shift: [0kx, 0.375ky]
              tags: [,dioderotate,u175]
            one:
              rotate: 180
              shift: [0kx, -2ky-0.375ky]
            dash.skip: true
            equals:
              height: 1ky
              shift: [0kx, -1ky]
            backspace.shift: [0.25kx, 0.25ky]
            special.shift: [-0.25kx, 0.25ky]
        # The modifier row has three 2u wide spacebar keys.
        # Theese keys have specific tags to specify they're framed by stabs.
        # Choc stabalizers need a PCB-specific and switch plate-specific cutout.
        mod:
          key.column_net: row5
          rows:
            escape:
              rotate: 180
              height: 1.25ky
              shift: [0kx, 0.125ky]
              tags: [,dioderotate,u125]
            one:
              rotate: 180
              shift: [0kx, -2.125ky]
            # Tag used for stab support switch plate.
            # The leading ,,, leave the other tags alone.
            two:
              tags: [,,,stabsupport]
            three:
              height: 2ky
              shift: [0kx, 0.5ky]
              tags: [,,u2,stabsupport]
            four.skip: true
            five:
              height: 2ky
              shift: [0kx, 0ky]
              tags: [,,u2,stabsupport]
            six.skip: true
            seven:
              height: 2ky
              shift: [0kx, 0ky]
              tags: [,,u2,stabsupport]
            eight.skip: true
            nine:
              height: 1.25ky
              shift: [0kx, -0.375ky]
              tags: [,,u125, stabsupport]
            zero:
              height: 1.25ky
              shift: [0kx, 0.25ky]
              tags: [,,u125]
            dash.skip: true
            equals.shift: [0.25kx, -0.625ky]
      # "Row" definition use col nets since everything's rotated.
      rows:
        escape.row_net: col1
        one.row_net: col2
        two.row_net: col3
        three.row_net: col4
        four.row_net: col5
        five.row_net: col6
        six.row_net: col7
        seven.row_net: col8
        eight.row_net: col9
        nine.row_net: col10
        zero.row_net: col11
        dash.row_net: col12
        equals.row_net: col13
        backspace.row_net: col14
        special.row_net: col15
outlines:
  # Outline for every key switch. Used for switch plate.
  _keys:
    - what: rectangle
      where: [key]
      size: [14, 14]
      fillet: 0.5
  # The USB port needs a small nubbin' poking out from the main PCB.
  # This rectangle is the main shape.
  _usb:
    - what: rectangle
      where: 
        - ref: controller_parts_mcu
          shift: [0, 21.5]
      size: [13.25, 6]
      fillet: 1
  # USB nubbin' cutouts. Creates space for a mid-mount USB-C port.
  # The left and right pieces give it a tapered shape.
  _usbcutout:
    - what: rectangle
      where:
        - ref: controller_parts_mcu
          shift: [0, 21.66]
      size: [9.28, 6.64]
  _leftsquare:
    - what: rectangle
      where: 
        - ref: controller_parts_mcu
          shift: [-7.5, 19.75]
      size: [3, 5.5]
  _leftcircle:
    - what: circle
      where: 
        - ref: controller_parts_mcu
          shift: [-10.5, 22.75]
      radius: 4
  _rightsquare:
    - what: rectangle
      where: 
        - ref: controller_parts_mcu
          shift: [7.5, 19.75]
      size: [3, 5.5]
  _rightcircle:
    - what: circle
      where: 
        - ref: controller_parts_mcu
          shift: [10.5, 22.75]
      radius: 4
  # Combining the left and right tapered edges together.
  _leftsupport:
    - _leftsquare
    - -_leftcircle
  _rightsupport:
    - _rightsquare
    - -_rightcircle
  # The base PCB shape without the USB nub.
  _border:
    - what: polygon
      points:
        - ref: matrix_num_escape # Top Left
          shift: [0.5kx-pcbpadding, 0.5ky-pcbpadding]
        - ref: matrix_top_special # Top Right
          shift: [-1.25kx-0.5kx-pcbpadding, 0.5ky+pcbpadding]
        - ref: matrix_mod_special # Bottom Right 
          shift: [0.5kx+pcbpadding, 0.25ky+0.5ky+pcbpadding]
        - ref: matrix_mod_equals # Left Arrow
          shift: [0.5kx+pcbpadding, -0.25ky-0.5ky-pcbpadding+2]
        - ref: matrix_mod_equals # Left Arrow Above
          shift: [0.25kx+pcbpadding, -0.25ky-0.5ky-pcbpadding+2]
        - ref: matrix_mod_escape # Bottom Left
          shift: [-0.5kx+pcbpadding, 0.125ky+0.5ky-pcbpadding]
      fillet: 1
  # The final outline for the keyboard PCB.
  _combo:
    - _border
    - _usb
    - _leftsupport
    - _rightsupport
    - -_usbcutout
  # Full switch plate outline. (Does not have a USB nub.)
  _plate:
    - _border
    - -_keys
  # The 2u spacebar stabalizers require a switch plate.
  # PCB fabs charge based off the size of the PCB, and this keyboard fairly large.
  # As an alternate design, this switch plate "Shim" is only as large as the spacebar
  # keys and their surrounding neighbors. The idea was to keep the cost of the PCB
  # order as low as possible. Unfortunately, JLCPCB requested an additional $7 charge
  # for this shim. The stabalizer cutouts are off-centered, and the top edge was thin
  # enough that they wanted to spend some extra time to make sure it hadn't snapped off.
  # This approach would probably work if you made it a *smidge* thicker. I ended up
  # just going with the full switch palte. The shim is untested and just here for reference.
  _stabshim:
    - what: polygon
      points:
        - ref: matrix_mod_two
          shift: [-9.15, -8.5]
        - ref: matrix_mod_two
          shift: [9.15, -8.5]
        - ref: matrix_mod_nine
          shift: [9.15,8.5]
        - ref: matrix_mod_nine
          shift: [-9.15, 8.5]
      fillet: 1
  _stabcutouts:
    - what: rectangle
      where: [stabsupport]
      size: [14,14]
      fillet: 0.5
  _stabsupport:
    - _stabshim
    - -_stabcutouts
  # Screw hole outlines. Used for case designing.
  _toplefthole:
    - what: circle
      radius: insert
      where:
        ref: matrix_num_one
        shift: [-4, 0.5ky]
  _topmiddlehole:
    - what: circle
      radius: insert
      where:
        ref: matrix_num_five
        shift: [-4, 0.5ky]
  _topotherhole:
    - what: circle
      radius: insert
      where:
        ref: matrix_num_seven
        shift: [-4, 0.5ky]
  _bottomlefthole:
    - what: circle
      radius: insert
      where:
        ref: matrix_bottom_escape
        shift: [-0.5kx+4, 0.5ky+0.125kx]
  _bottommiddlehole:
    - what: circle
      radius: insert
      where:
        ref: matrix_bottom_five
        shift: [-4, 0.5ky]
  _bottomotherhole:
    - what: circle
      radius: insert
      where:
        ref: matrix_bottom_seven
        shift: [-4, 0.5ky]
  _toprighthole:
    - what: circle
      radius: insert
      where:
        ref: matrix_num_dash
        shift: [-4, 0.5ky]
  _bottomrighthole:
    - what: circle
      radius: insert
      where:
        ref: matrix_mod_backspace
        shift: [-4, 0.5ky]
  # Outline section has an option for an inner border and outer border.
  case_inner_border:
    - what: polygon
      points:
        - ref: matrix_num_escape # Top Left
          shift: [0.5kx+caseinnerpadding, 0.5ky+caseinnerpadding]
        - ref: matrix_top_special # Top Right
          shift: [-1.25kx-0.5kx-caseinnerpadding, 0.5ky+caseinnerpadding]
        - ref: matrix_mod_special # Bottom Right 
          shift: [0.5kx+caseinnerpadding, 0.25ky+0.5ky+caseinnerpadding]
        - ref: matrix_mod_equals # Left Arrow
          shift: [0.5kx+caseinnerpadding, -0.25ky-0.5ky-caseinnerpadding+2]
        - ref: matrix_mod_equals # Left Arrow Above
          shift: [0.25kx+caseinnerpadding, -0.25ky-0.5ky-caseinnerpadding+2]
        - ref: matrix_mod_escape # Bottom Left
          shift: [-0.5kx-caseinnerpadding, 0.125ky+0.5ky+caseinnerpadding]
      fillet: 1
  # PCB outline with screw holes for case construction.
  case_pcb:
    - case_inner_border
    - _usb
    - _leftsupport
    - _rightsupport
    - -_usbcutout
    - -_toplefthole
    - -_topmiddlehole
    - -_topotherhole
    - -_bottomlefthole
    - -_bottommiddlehole
    - -_bottomotherhole
    - -_toprighthole
    - -_bottomrighthole
  # Outline for outer case border
  case_outline:
    - what: polygon
      points:
        - ref: matrix_num_escape # Top Left
          shift: [0.5kx+casepadding, 0.5ky+casepadding]
        - ref: matrix_top_special # Top Right
          shift: [-1.25kx-0.5kx-casepadding, 0.5ky+casepadding]
        - ref: matrix_mod_special # Bottom Right 
          shift: [0.5kx+casepadding, 0.25ky+0.5ky+casepadding]
        - ref: matrix_mod_equals # Left Arrow
          shift: [0.5kx+casepadding, -0.25ky-0.5ky-casepadding+2]
        - ref: matrix_mod_equals # Left Arrow Above
          shift: [0.25kx+casepadding, -0.25ky-0.5ky-casepadding+2]
        - ref: matrix_mod_escape # Bottom Left
          shift: [-0.5kx-casepadding, 0.125ky+0.5ky+casepadding]
      fillet: 1
pcbs:
  # Main PCB. Ergogen doesn't let you start names with numbers.
  # Hence just 'crimes' instead of '65crimes'.
  # All MCU components are mounted on the back of the PCB.
  # CH559L circuit based off the Partycrasher Micro design
  # by Semickolon https:#oshwlab.com/kkpjfobj/partycrasher-micro
  crimes:
    outlines:
      main:
        outline: _combo
    footprints:
    # MCU. The Microcontroller. The WCH(Jiangsu Qin Heng) CH559L.
    # This build-in microcontroller leverages the FAK firmware.
    # It has a 0.5mm pitch (space between the pins). The big reason for
    # using the CH559L is the amount of pins available. If you can deal
    # with fewer pins, the CH552 has a much more easier to manage 0.65mm pitch.  
    - what: ch559l
      where: controller_parts_mcu
      params:
        side: 'B'
        P15: row5  # Pin 48
        P16: row4  # Pin  1
        P17: row3  # Pin  2
        P30: row2  # Pin  4
        P27: row1  # Pin 28
        P04: col15 # Pin 36
        P31: col14 # Pin  7
        P32: col13 # Pin  8
        P33: col12 # Pin  9
        P34: col11 # Pin 10
        P35: col10 # Pin 11
        P36: col9  # Pin 12
        P37: col8  # Pin 13
        P20: col7  # Pin 21
        P21: col6  # Pin 22
        P22: col5  # Pin 23
        P23: col4  # Pin 24
        P24: col3  # Pin 25
        P25: col2  # Pin 26
        P26: col1  # Pin 27
        P51: DPLUSOUT
        P50: DNEGOUT
      adjust:
        rotate: 90
        shift: [0, -0.5]
    # Electro Static Discharge (ESD) Protection.
    # Sits between your USB port and your MCU and makes sure that
    # the things that shouldn't go zap don't go zap.
    - what: esd
      where: controller_parts_mcu
      params:
        side: 'B'
      adjust:
        rotate: 90
        shift: [0, 11.5]
    # 3.3uf Cap in front of the MCU's 3.3v line.
    - what: smd805
      where: controller_parts_mcu
      params:
        side: 'B'
        from: V33
        to: GND
      adjust:
        rotate: 180
        shift: [8.5, -2]
    # 100nf Cap in front of the MCU's 5v line.
    - what: smd805
      where: controller_parts_mcu
      params:
        side: 'B'
        from: VBUS
        to: GND
      adjust:
        rotate: 180
        shift: [8.5, 1.5]
    # Mid-Mount USB-C Port
    - what: usbcmid
      where: controller_parts_mcu
      params:
        side: 'B'
        DN1: DNEGIN
        DN2: DNEGIN
        DP1: DPLUSIN
        DP2: DPLUSIN
      adjust:
        rotate: 0
        shift: [0, 25]
    # 5.1K Resistor for the USB port.
    - what: smd805
      where: controller_parts_mcu
      params:
        side: 'B'
        from: CC1
        to: GND
      adjust:
        rotate: 180
        shift: [-9.75, 17]
    # The other 5.1K Resistor for the USB port.
    - what: smd805
      where: controller_parts_mcu
      params:
        side: 'B'
        from: CC2
        to: GND
      adjust:
        rotate: 0
        shift: [9.75, 17]
    # Boot Button. Hold down while you plug the keyboard in
    # for it to enter flashing mode.
    - what: button
      where: controller_parts_mcu
      params:
        side: 'B'
        from: BOOT
        to: GND
      adjust:
        rotate: 90
        shift: [0, -22]
    # Reset Button. Three guesses as to what this does.
    - what: button
      where: controller_parts_mcu
      params:
        side: 'B'
        from: RST
        to: VBUS
      adjust:
        rotate: 180
        shift: [15.75, -0.5]
    # Standard 1u keys.
    # Every key on this keyboard is rotated "-90" degrees.
    # The keyboard is already rotated 270 degrees. In reality,
    # these keys are flipped 180 degrees upside down from their standard
    # orientation. The USB port and its resistors needed a bit more room
    # to comfortably space out the components. Rather than just rotating
    # those two keys, every key was flipped the same way to keep things
    # consistent.
    - what: choc
      where: [u1]
      params:
        keycaps: true
        reverse: false
        hotswap: true
        from: "{{column_net}}"
        to: "{{colrow}}"
      adjust:
        rotate: -90
        shift: [0, 0]
    # 1.25u keys.
    - what: choc-125u
      where: [u125]
      params:
        keycaps: true
        reverse: false
        hotswap: true
        from: "{{column_net}}"
        to: "{{colrow}}"
      adjust:
        rotate: -90
        shift: [0, 0]
    # 1.75u keys.
    - what: choc-175u
      where: [u175]
      params:
        keycaps: true
        reverse: false
        hotswap: true
        from: "{{column_net}}"
        to: "{{colrow}}"
      adjust:
        rotate: -90
        shift: [0, 0]
    # 2u Keys
    - what: choc-2u
      where: [u2]
      params:
        keycaps: true
        reverse: false
        hotswap: true
        from: "{{column_net}}"
        to: "{{colrow}}"
      adjust:
        rotate: -90
        shift: [0, 0]
    # 2u PCB Stabanlizers
    - what: choc-stab-2u
      where: [u2]
      adjust:
        rotate: 90
    # SMD Diodes. Due to the keyboard's rotation in Ergogen, these diodes
    # are pointing backwards. You need to use "RowToCol" instead of "ColToRow".
    # You could also probably swap the from: and to: variables, but I haven't
    # tested that yet.
    - what: diode-rear
      where: [diode]
      params:
        from: "{{colrow}}"
        to: "{{row_net}}"
      adjust:
        rotate: -90
        shift: [-5, 0]
    # SMD Diodes (Rotated).
    # So. About those 180 degree rotated standard 1u keys. (See the above comment on
    # the 1u keys.) Flipping every key upside down worked for every key except for
    # far left row. (Esc, tab, etc.) In their flipped state, the hotswap sockets clipped
    # off the edge of the board. Spinning the keys around fixed the problem, but it left
    # their diodes pointing in the opposite direction of all the other diodes on the keyboard.
    # These "dioderotate" tagged keys have their diodes spun around to fix the orientation issue.
    # This should help avoid any soldering issues. Electronically they're wired up the same
    # as the rest of the keyboard matrix.
    - what: diode-rear
      where: [dioderotate]
      params:
        from: "{{colrow}}"
        to: "{{row_net}}"
      adjust:
        rotate: 90
        shift: [-5, 0]
    # SMD Diodes (Nudged)
    # The top right two keys near the USB-C port need nudged down to make room for other components.
    - what: diode-rear
      where: [diodenudge]
      params:
        from: "{{colrow}}"
        to: "{{row_net}}"
      adjust:
        rotate: -90
        shift: [-3.5, 0]
    # Mounting holes! M2 mounting holes with via-style plating.
    # Top Left Hole
    - what: m2mountinghole
      where: matrix_num_one
      adjust:
        shift: [-4, 0.5ky]
    # Top Middle Hole
    - what: m2mountinghole
      where: matrix_num_five
      adjust:
        shift: [-4, 0.5ky]
    # Top Other Hole
    - what: m2mountinghole
      where: matrix_num_seven
      adjust:
        shift: [-4, 0.5ky]
    # Bottom Left Hole
    - what: m2mountinghole
      where: matrix_bottom_escape
      adjust:
        shift: [-0.5kx+4, 0.5ky+0.125kx]
    # Bottom Middle Hole
    - what: m2mountinghole
      where: matrix_bottom_five
      adjust:
        shift: [-4, 0.5ky]
    # Bottom Other Hole
    - what: m2mountinghole
      where: matrix_bottom_seven
      adjust:
        shift: [-4, 0.5ky]
    # Top Right Hole
    - what: m2mountinghole
      where: matrix_num_dash
      adjust:
        shift: [-4, 0.5ky]
    # Bottom Right Hole
    - what: m2mountinghole
      where: matrix_mod_backspace
      adjust:
        shift: [-4, 0.5ky]
  # Standard Switchplate
  # The Choc stabalizers need a switch plate. This is a typical switch plate with:
  # A cutout for every key. A cutout for the stabanlizers. M2 mounting holes.
  # If you fab this "PCB", make sure it's 1.2mm thick.
  switchplate:
    outlines:
      main:
        outline: _plate
    footprints:
    - what: choc-stab-2u-cutout
      where: [u2, u2rightspace]
      adjust:
        rotate: 90
        shift: [0, 0]
    # Top Left Hole
    - what: m2mountinghole
      where: matrix_num_one
      adjust:
        shift: [-4, 0.5ky]
    # Top Middle Hole
    - what: m2mountinghole
      where: matrix_num_five
      adjust:
        shift: [-4, 0.5ky]
    # Top Other Hole
    - what: m2mountinghole
      where: matrix_num_seven
      adjust:
        shift: [-4, 0.5ky]
    # Bottom Left Hole
    - what: m2mountinghole
      where: matrix_bottom_escape
      adjust:
        shift: [-0.5kx+4, 0.5ky+0.125kx]
    # Bottom Middle Hole
    - what: m2mountinghole
      where: matrix_bottom_five
      adjust:
        shift: [-4, 0.5ky]
    # Bottom Other Hole
    - what: m2mountinghole
      where: matrix_bottom_seven
      adjust:
        shift: [-4, 0.5ky]
    # Top Right Hole
    - what: m2mountinghole
      where: matrix_num_dash
      adjust:
        shift: [-4, 0.5ky]
    # Bottom Right Hole
    - what: m2mountinghole
      where: matrix_mod_backspace
      adjust:
        shift: [-4, 0.5ky]
  # Smaller switch plate that only covers the spacebars and adjacent modifier keys.
  # JLCPCB wanted an extra 7mm due to the smaller pieces at the top of the shim.
  # The choc stabanlizers aren't symetrical. You may be able to fab this without an
  # additional cost by making things slightly larger. I just decided to make the full
  # switch plate. There's no M2 screw holes or anything fancy about this piece.

  # THIS PART HAS NOT BEEN TESTED. FAB AT YOUR OWN RISK.
  u2supportshim:
    outlines:
      main:
        outline: _stabsupport
    footprints:
    - what: choc-stab-2u-cutout
      where: [u2]
      adjust:
        rotate: 90
        shift: [0, 0]